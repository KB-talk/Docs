import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as s,b as a}from"./app-DHxhZgdt.js";const l={},t=a('<h2 id="下载依赖软件包" tabindex="-1"><a class="header-anchor" href="#下载依赖软件包"><span>下载依赖软件包</span></a></h2><p>依赖软件包是用于编译SDK。</p><p>使用终端安装依赖，依次执行下面命令。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>下面的命令适用于Ubuntu20版本，不适合其他版本</p></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install uuid uuid-dev zlib1g-dev liblz-dev liblzo2-2 liblzo2-dev lzop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install git curl u-boot-tools mtd-utils</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install openjdk-8-jdk device-tree-compiler</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install gdisk m4 zlib1g-dev git gnupg flex bison gperf libsdl1.2-dev libesd-java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install squashfs-tools build-essential zip curl libncurses5-dev zlib1g-dev pngcrush schedtool</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install libxml2 libxml2-utils xsltproc lzop libc6-dev schedtool g++-multilib lib32z1-dev</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install lib32ncurses-dev lib32readline-dev gcc-multilib libswitch-perl libssl-dev unzip</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install zip liblz4-tool git ssh make gcc libssl-dev liblz4-tool vim expect</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install g++ patchelf chrpath gawk texinfo chrpath diffstat binfmt-support</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install qemu-user-static live-build bison flex fakeroot cmake gcc-multilib g++-multilib</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install unzip device-tree-compiler python3-pip libncurses5-dev rsync subversion python-protobuf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install sed make binutils build-essential gcc</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install g++ wget python-is-python2 libncurses5 bzr cvs git mercurial</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>sudo apt-get install patch gzip bzip2 perl tar cpio unzip rsync file bc wget qemu-user-static live-build android-sdk-libsparse-utils android-sdk-ext4-utils</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">重要</p><p>经测试以上依赖在 Ubuntu20.04 环境安装完成之后，可以对 Linux 和 Android12 源码进行编译通过。</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如遇到下面错误，重新执行下载软件包操作即可，或根据提示在末尾加上<code>--fix-missing</code>，但不要在第一次执行下载软件包时就添加。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>E: 有几个软件包无法下载，要不运行 apt-get update 或者加上 --fix-missing 的选项再试试？</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><h2 id="sdk编译" tabindex="-1"><a class="header-anchor" href="#sdk编译"><span>SDK编译</span></a></h2><h3 id="sdk的全自动编译" tabindex="-1"><a class="header-anchor" href="#sdk的全自动编译"><span>SDK的全自动编译</span></a></h3><p>全自动编译是将uboot、kernel、recovery等部分全部进行编译。对于新解压的SDK需要进行一次全自动编译，第一次编译不要进行单独编译，会出现报错的情况。</p><p>打开终端，进入SDK的目录下，执行<code>./build.sh</code>，进入编译的UI界面，注意需要保证终端的窗口不要太小，否侧会报错，尤其是在使用Vscode的终端时，需要将窗口拉大。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./build.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="uboot单独编译" tabindex="-1"><a class="header-anchor" href="#uboot单独编译"><span>uboot单独编译</span></a></h3><p>打开终端，进入SDK所在目录，输入<code>./build.sh uboot</code>即可单独编译uboot。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./build.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> uboot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="kernel单独编译" tabindex="-1"><a class="header-anchor" href="#kernel单独编译"><span>kernel单独编译</span></a></h3><p>打开终端，进入SDK所在目录，输入<code>./build.sh kernel</code>即可单独编译kernel。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./build.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> kernel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="recovery单独编译" tabindex="-1"><a class="header-anchor" href="#recovery单独编译"><span>Recovery单独编译</span></a></h3><p>打开终端，进入SDK所在目录，输入<code>./build.sh recovery</code>即可单独编译recovery。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./build.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> recovery</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="打包镜像" tabindex="-1"><a class="header-anchor" href="#打包镜像"><span>打包镜像</span></a></h3><p>打开终端，进入SDK所在目录，输入<code>./build.sh firmware</code>即可打包所有启动系统需要的镜像。</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">./build.sh</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> firmware</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',38),d=[t];function n(h,r){return s(),e("div",null,d)}const b=i(l,[["render",n],["__file","2.SDK操作.html.vue"]]),p=JSON.parse('{"path":"/RK3588/2.SDK/2.SDK%E6%93%8D%E4%BD%9C.html","title":"SDK相关操作","lang":"zh-CN","frontmatter":{"title":"SDK相关操作","cover":"/assets/images/cover1.jpg","icon":"file","order":1,"author":"张凯博","date":"2024-06-21T00:00:00.000Z","category":["STM32"],"tag":["开发环境","介绍"],"sticky":false,"star":false,"footer":"STM32开发环境搭建","copyright":"无版权","feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"下载依赖软件包","slug":"下载依赖软件包","link":"#下载依赖软件包","children":[]},{"level":2,"title":"SDK编译","slug":"sdk编译","link":"#sdk编译","children":[{"level":3,"title":"SDK的全自动编译","slug":"sdk的全自动编译","link":"#sdk的全自动编译","children":[]},{"level":3,"title":"uboot单独编译","slug":"uboot单独编译","link":"#uboot单独编译","children":[]},{"level":3,"title":"kernel单独编译","slug":"kernel单独编译","link":"#kernel单独编译","children":[]},{"level":3,"title":"Recovery单独编译","slug":"recovery单独编译","link":"#recovery单独编译","children":[]},{"level":3,"title":"打包镜像","slug":"打包镜像","link":"#打包镜像","children":[]}]}],"git":{"createdTime":1719908753000,"updatedTime":1719965753000,"contributors":[{"name":"KB-talk","email":"zkb13258847839@163.com","commits":2}]},"readingTime":{"minutes":2.64,"words":793},"filePathRelative":"RK3588/2.SDK/2.SDK操作.md","localizedDate":"2024年6月21日"}');export{b as comp,p as data};
